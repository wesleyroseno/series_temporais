---
lang: pt-BR
title: "<center>Séries Temporais</center>"
subtitle: "<center>Temperaturas Médias Mensais</center>"
author:
  - name: "Adrielly Rocha de Sousa Ferreira"
  - name: "Wesley Roseno Saraiva"
date: 06-27-2025
bibliography:
  - "referencias/referencias.bib"
format:
  html:
    toc: true
    toc-location: left
    toc_float: yes
    code-fold: true
    self_contained: true
    self-contained-math: true
    embed-resources: true
    theme: darkly
    number-sections: true
    css: styles.css
---

```{r setup, message = FALSE, warning = FALSE}
# Configurações globais para os blocos de código
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, fig.align = 'center')

# Vetor com os nomes dos pacotes que você deseja usar
pacotes <- c(
  "tidyverse",  # inclui ggplot2, dplyr, tidyr, magrittr (%>%), etc.
  "lubridate",
  "forecast",
  "tseries",
  "readxl",
  "leaflet",
  "geosphere"
)

# Loop para verificar, instalar (se necessário) e carregar cada pacote
for (p in pacotes) {
  if (!requireNamespace(p, quietly = TRUE)) {
    install.packages(p)
  }
  library(p, character.only = TRUE)
}
```

# Introdução e Análise Exploratória dos Dados

## Contexto Geográfico e Climatológico

Este relatório foca-se em duas localidades costeiras de São Paulo: Cananéia e Ubatuba. Cananéia está no Litoral Sul, numa região de estuário, enquanto Ubatuba, no Litoral Norte, tem maior exposição ao Atlântico. A análise comparativa permite investigar como estas diferenças geográficas se traduzem em padrões de temperatura distintos.

**Figura [-@fig-distancia]: Distancia entre Cananéia e Ubatuba.**

```{r}
#| label: fig-distancia
# Definição das coordenadas
coords <- data.frame(
  cidade = c("Cananéia", "Ubatuba"),
  lat    = c(-25.012621, -23.4336713),
  lon    = c(-47.9338687, -45.0838529)
)

# Calcula distância geodésica em metros e converte para quilômetros
dist_m <- distGeo(c(coords$lon[1], coords$lat[1]), c(coords$lon[2], coords$lat[2]))
dist_km <- round(dist_m / 1000, 2)

# Calcula ponto médio para posicionar o rótulo
mid_lat <- mean(coords$lat)
mid_lon <- mean(coords$lon)

# Cria o mapa
leaflet(data = coords) %>%
  addTiles() %>%  # camada base OpenStreetMap
  addCircleMarkers(
    lng = ~lon, lat = ~lat,
    label = ~cidade,
    radius = 8,
    color = "navy",
    fillColor = "skyblue",
    fillOpacity = 0.7,
    stroke = TRUE, weight = 1
  ) %>%
  # Adiciona linha conectando as cidades
  addPolylines(
    lng = coords$lon, lat = coords$lat,
    color = "red",
    weight = 2,
    opacity = 0.8
  ) %>%
  # Adiciona rótulo com a distância no ponto médio
  addLabelOnlyMarkers(
    lng = mid_lon, lat = mid_lat,
    label = paste0(dist_km, " km"),
    labelOptions = labelOptions(
      noHide = TRUE,
      direction = "center",
      textOnly = TRUE,
      style = list(
        "color" = "red",
        "font-weight" = "bold",
        "background" = "white",
        "padding" = "4px"
      )
    )
  ) %>%
  addControl(
    html = "<strong>Cidades Litorâneas de SP</strong>",
    position = "topright"
  )
```

## O Conjunto de Dados: Estrutura

Os dados são de temperaturas médias mensais (°C) de janeiro de 1976 a dezembro de 1985. São duas séries temporais, cada uma com 120 observações.

```{r dados}
df_raw <- readxl::read_excel(
  path = "dados/temperatura.xls",
  sheet = "Plan1",
  col_names = TRUE
)

df_raw$Ano <- seq(as.Date("1976-01-01"), as.Date("1985-12-01"), by="month")

# Converter para objetos de série temporal (ts)
cananeia_ts <- ts(df_raw$Cananeia, start = c(1976, 1), frequency = 12)
ubatuba_ts <- ts(df_raw$Ubatuba, start = c(1976, 1), frequency = 12)
```

## Análise Visual e Descritiva Preliminar

Ambas as séries exibem um padrão cíclico anual, indicando uma componente sazonal. Visualmente, Ubatuba parece ser consistentemente mais quente, exceto no ano de 1983.

**Figura [-@fig-serie]: Séries temporais de temperatura para Cananéia e Ubatuba.**

```{r}
#| label: fig-serie
# Plotando as séries temporais com ggplot2
df_raw %>%
  pivot_longer(cols = c(Cananeia, Ubatuba), names_to = "Localidade", values_to = "Temperatura") %>%
  ggplot(aes(x = Ano, y = Temperatura, color = Localidade)) +
  geom_line(linewidth = 1) +
  labs(
    title = "Temperaturas Médias Mensais (1976-1985)",
    x = "Ano",
    y = "Temperatura (°C)"
  ) +
  scale_color_manual(values = c("Cananeia" = "royalblue", "Ubatuba" = "darkorange")) +
  theme_minimal() +
  theme(legend.position = "bottom")
```

**Tabela [-@tbl-descritiva]: Estatísticas Descritivas das Temperaturas Médias Mensais (°C)**

```{r}
#| label: tbl-descritiva
#| tbl-cap: ""
# Cálculo das estatísticas básicas
resumo_Cananeia <- summary(df_raw$Cananeia)
resumo_Ubatuba <- summary(df_raw$Ubatuba)
df_resumo <- data.frame(
  Estatística = c("Valor mínimo", "1º Quartil", "Mediana", "Média", "3º Quartil", "Valor Máximo"),
  Cananeia = round(as.numeric(resumo_Cananeia), 1),
  Ubatuba = round(as.numeric(resumo_Ubatuba), 1)
)

# Cálculo do desvio padrão
sd_Cananeia <- round(sd(df_raw$Cananeia, na.rm = TRUE), 1)
sd_Ubatuba  <- round(sd(df_raw$Ubatuba,  na.rm = TRUE), 1)

# Criar data frame para desvio padrão e adicionar ao resumo
df_sd <- data.frame(
  Estatística = "Desvio padrão",
  Cananeia    = sd_Cananeia,
  Ubatuba     = sd_Ubatuba
)

df_resumo <- rbind(df_resumo, df_sd)

# Exibir tabela final
knitr::kable(df_resumo,
             row.names = FALSE
             )
```

A Tabela [-@tbl-descritiva] quantifica que Ubatuba é, em média, 0,9°C mais quente, sendo maior também a sua temperatura mediana. E apesar de Ubatuba ter a menor e maior temperatura, Cananéia apresenta um desvio padrão ligeiramente maior, indicando maior variabilidade em torno da sua média.

# Decomposição Estrutural das Séries Temporais

## Metodologia de Decomposição

Escolhemos um modelo aditivo pois a amplitude das flutuações sazonais parece constante ao longo do tempo. O modelo de decomposição aditivo, a série temporal é expressa como:

$$
Z_t = T_t + S_t + a_t
$$ {#eq-decomp}

Em que:

-   $Z_t$ é a observação da série temporal no instante $t$;
-   $T_t$ representa a componente de tendência;
-   $S_t$ representa a componente de sazonalidade;
-   $a_t$ é o termo de ruído.

## Análise do Componente de Tendência

Para formalizar a análise visual da tendência, ajustamos um modelo de regressão linear simples para cada localidade, onde a temperatura é a variável resposta e o tempo (representado por um índice numérico de 1 a 120 meses) é a variável preditora. O objetivo é testar se a inclinação da linha de tendência é estatisticamente diferente de zero.

### Cananéia

```{r}
# --- Executando a Regressão Linear Simples ---

# 1. Modelo para Cananéia
modelo_cananeia <- lm(Cananeia ~ Ano, data = df_raw)

# --- Visualizando os Resultados ---

# O comando summary() fornece uma visão completa, incluindo coeficientes e p-valores.

cat("--- Resultados da Regressão para Cananéia ---\n")
print(summary(modelo_cananeia))

# --- Calculando e Exibindo os Intervalos de Confiança de 95% ---

cat("--- Intervalo de Confiança (95%) para Cananéia ---\n")
print(confint(modelo_cananeia))
```

Para Cananéia, o modelo de regressão não encontrou uma tendência temporal estatisticamente significativa. A análise dos resultados confirma esta conclusão de duas maneiras principais:

-   P-valor: O coeficiente para a variável de tempo (Ano) foi de -4.955e-05, um valor extremamente próximo de zero. O p-valor associado a este coeficiente é de 0.841, que é muito superior ao nível de significância padrão de 0.05. Isso indica que não há evidências para rejeitar a hipótese nula de que o coeficiente é igual a zero.

-   Intervalo de Confiança: O intervalo de confiança de 95% para o coeficiente de tempo é de \[-0.000536, 0.000437\]. Como este intervalo contém o valor zero, temos uma forte confirmação de que a pequena tendência observada nos dados é indistinguível de uma variação aleatória.

Conclusão para Cananéia: Não há evidência estatística de uma tendência de aquecimento ou resfriamento em Cananéia durante o período de 1976 a 1985.

### Ubatuba

```{r}
# --- Executando a Regressão Linear Simples ---

# 2. Modelo para Ubatuba
modelo_ubatuba <- lm(Ubatuba ~ Ano, data = df_raw)


# --- Visualizando os Resultados ---

# O comando summary() fornece uma visão completa, incluindo coeficientes e p-valores.

cat("\n--- Resultados da Regressão para Ubatuba ---\n")
print(summary(modelo_ubatuba))

# --- Calculando e Exibindo os Intervalos de Confiança de 95% ---

cat("\n--- Intervalo de Confiança (95%) para Ubatuba ---\n")
print(confint(modelo_ubatuba))
```

Para Ubatuba, a análise revela um resultado diferente. O modelo encontrou uma tendência pequena de resfriamento, mas estatisticamente significativa:

-   P-valor: O coeficiente para a variável de tempo foi de -0.000647, indicando uma leve tendência de resfriamento. O p-valor associado é de 0.00538, que é significativamente inferior a 0.05. Isso sugere que a tendência observada é improvável de ter ocorrido por acaso.

-   Intervalo de Confiança: O intervalo de confiança de 95% para o coeficiente de tempo é de \[-0.00110, -0.00020\]. Crucialmente, este intervalo não contém o valor zero e está inteiramente no campo negativo. Isso reforça a conclusão de que existe uma tendência de resfriamento estatisticamente significativa, embora a sua magnitude seja muito pequena (uma redução de aproximadamente 0.00065 °C por mês).

Conclusão para Ubatuba: Há evidência estatística de uma leve tendência de resfriamento em Ubatuba durante o período analisado. No entanto, é importante notar que, apesar da significância estatística, a magnitude do efeito prático é mínima.

## Caracterização do Ciclo Sazonal

A Sazonalidade pode ser percebida quando se é removido o componente de tendencia $T_t$ da série temporal $Z_t$, conforme a Equação [-@eq-decomp]. Como não há evidência estatística de uma tendência em Cananéia, podemos assumir a sua série da Figura [-@fig-serie] como a sua sazonalidade $S_t$ mais a componente de ruído $a_t$. O memso vale para Ubatuba, pois apesar de haver evidência estatística de uma tendência em Ubatuba, a magnitude do efeito prático é mínima.

# Modelagem Estocástica com Modelos SARIMA

## Fundamentos dos Modelos SARIMA

O modelo SARIMA é uma extensão do modelo ARIMA que incorpora componentes sazonais, permitindo representar séries temporais que apresentam padrões de repetição em determinados intervalos de tempo. A construção do modelo SARIMA combina os componentes sazonais e não sazonais para capturar tanto a tendência quanto a estrutura repetitiva dos dados, sendo amplamente utilizado em séries como temperatura, vendas e produção.

O modelo SARIMA, além de possuir os parâmetros (p), (d) e (q), também inclui parâmetros sazonais (P), (D) e (Q), bem como o período sazonal (s).

**Em que:**

-   **Parâmetro sazonal AR (P):** o número de termos de auto-regressão sazonal.
-   **Parâmetro sazonal MA (Q):** o número de termos de média móvel sazonal.
-   **Diferenciação sazonal (D):** o número de diferenciações sazonais necessárias para tornar a série estacionária.
-   **Período sazonal (s):** indica o período da sazonalidade, como 12 para dados mensais com padrão anual.

## Pré-processamento: Testes de Estacionariedade

Antes da aplicação do modelo SARIMA, é essencial verificar se a série temporal é estacionária, ou seja, se suas propriedades estatísticas, como média e variância, permanecem constantes ao longo do tempo. Para isso, utlizaremos o **teste de Dickey-Fuller aumentado (ADF)**, se o p-valor for valor-p \> 0,05, a série não é estacionária. Caso contrario, é considerada estacionária.

```{r}
adf.test(cananeia_ts)
adf.test(ubatuba_ts)
```

Sendo assim, ao nível de 5% de significância, rejeita-se a hipotese nula, portanto, tanto a que a série para Cananeia quanto a série para Ubatuba são estacionárias. O valor da estatística também é bastante negativo, reforçando a evidência contra a não estacionariedade.

### Teste de estacionariedade sazonal - Usando diferença sazonal

Para verificar se é necessário diferenciar sazonalmente:

```{r}
nsdiffs(cananeia_ts)
nsdiffs(ubatuba_ts)

```

Portanto, em ambas as séries, é necessário aplicar 1 diferença sazonal para alcançar estacionariedade.

Para verificar se é necessário diferenciar não sazonalmente:

```{r}
ndiffs(cananeia_ts) 
ndiffs(ubatuba_ts) 
```

Os resultados indicam que nenhuma das séries requer diferenciação não sazonal. Isso confirma o que foi observado no teste ADF: ambas já são estacionárias quanto à tendência.

## Identificação do Modelo: Análise ACF e PACF

Após constatar a estacionáriedade da série, o próximo passo é identificar que nos ajudem a definir os parâmetros do modelo SARIMA. Como as séries exigiram 1 diferença sazonal e nenhuma não sazonal, aplicamos apenas a diferença sazonalpara realizar essa análise. Isso é feito por meio da análise dos gráficos da função de autocorrelação (ACF) e da função de autocorrelação parcial (PACF), que ajudam a detectar a presença de defasagens significativas na série, orientando a escolha de *p*, *q*, *P* e *Q*.

Aplicação da Diferença Sazonal:

```{r}
# Aplicando 1 diferença sazonal (lag = 12)
cananeia_diff <- diff(cananeia_ts, lag = 12)
ubatuba_diff <- diff(ubatuba_ts, lag = 12)
```

**Figura [-@fig-acf_pcf_c]: ACF e PACF para a série Cananéia.**

```{r}
#| label: fig-acf_pcf_c
par(mfrow = c(1, 2))  # Coloca os dois gráficos lado a lado
acf(cananeia_diff, main = "ACF-Cananéia (Diferença Sazonal)  ")
pacf(cananeia_diff, main = "PACF-Cananéia (Diferença Sazonal)    ")
```

**Figura [-@fig-acf_pcf_u]: ACF e PACF para a série Ubatuba.**

```{r}
#| label: fig-acf_pcf_u
par(mfrow = c(1, 2))
acf(ubatuba_diff, main = "ACF-Ubatuba (Diferença Sazonal)  ")
pacf(ubatuba_diff, main = "PACF-Ubatuba (Diferença Sazonal)   ")
```

## Estimação e Seleção do Modelo Final

Com base na análise ACF e PACF, foram propostos modelos SARIMA candidatos para as séries de Ubatuba e Cananéia. Nesta etapa, esses modelos foram ajustados e comparados utiilizando os critérios de informação (AIC e BIC), para selecionar o que melhor se ajustar aos dados.

### Ajuste e Comparação para a série de Cananéia

Modelo 1 vs 2 para Cananéia
```{r}
# Modelo 1
modelo_cananeia_1 <- Arima(cananeia_ts, order = c(0,0,1), seasonal = c(1,1,1))
modelo_cananeia_1

# Modelo 2 
modelo_cananeia_2 <- Arima(cananeia_ts, order = c(1,0,1), seasonal = c(1,1,1))
modelo_cananeia_2
```

Notamos então que, em ambos os modelos, há presença de termos sazonais. Assim, os modelos estimados foram:

-   **Modelo SARIMA(0,0,1)(1,1,1)\[12\]**:\
    $$ Z_t = 0{,}3158a_{t−1} - 0{,}0118Z_{t−12} - 1{,}0000a_{t−12} + a_t $$

-   **Modelo SARIMA(1,0,1)(1,1,1)\[12\]**:\
    $$ Z_t = 0{,}4357Z_{t−1} - 0{,}0762a_{t−1} - 0{,}0236Z_{t−12} - 1{,}0000a_{t−12} + a_t $$

Comparação dos critérios AIC e BIC para os modelos 1 e 2:
```{r}
AIC(modelo_cananeia_1); BIC(modelo_cananeia_1)
AIC(modelo_cananeia_2); BIC(modelo_cananeia_2)
```

Para esse serie, o modelo 2 apresentou o menor AIC, sugerindo melhor ajuste aos dados. Entretanto, o modelo 1 teve menor BIC, indicando maior parcimônia. Sendo assim, considerando que o foco da análise é obter um modelo com melhor desempenho preditivo, optou-se pelo modelo 2 como o final para a série da Cananéia.

### Ajuste e Comparação para a Série de Ubatuba

 Modelo 1 vs 2 para Ubatuba
```{r}
# Modelo 1 
modelo_ubatuba_1 <- Arima(ubatuba_ts, order = c(1,0,1), seasonal = c(1,1,1))
modelo_ubatuba_1
# Modelo 2 
modelo_ubatuba_2 <- Arima(ubatuba_ts, order = c(1,0,0), seasonal = c(1,1,1))
modelo_ubatuba_2
```

Notamos então que, em ambos os modelos, há presença de termos sazonais. Assim, os modelos estimados foram:

-   **Modelo SARIMA(1,0,1)(1,1,1)\[12\]**:\
    $$ Z_t = 0{,}7815Z_{t−1} - 0{,}1637a_{t−1} + 0{,}1076Z_{t−12} - 0{,}9178a_{t−12} + a_t $$

-   **Modelo SARIMA(1,0,0)(1,1,1)\[12\]**:\
    $$ Z_t = 0{,}6971Z_{t−1} + 0{,}1130Z_{t−12} - 0{,}9022a_{t−12} + a_t $$

Comparação dos critérios AIC e BIC para os modelos 1 e 2:
```{r}
# Comparação dos critérios
AIC(modelo_ubatuba_1); BIC(modelo_ubatuba_1)
AIC(modelo_ubatuba_2); BIC(modelo_ubatuba_2)
```

Sendo assim, o modelo 2 foi selecionado como o final para a série de Ubatuba, por apresentar os menores valores de AIC e BIC, indicando melhor equilíbrio entre qualidade do ajuste e simplicidade do modelo.

# Diagnóstico do Modelo

## Análise de Diagnóstico dos Resíduos para os modelos finais {#sec-residuo}

Após o ajuste dos modelos SARIMA para os dados de Cananéia e Ubatuba, é necessario realizar uma análise gráfica para verificar a adequação dos modelos em termos de autocorrelação e normalidade dos resíduos.

```{r}
checkresiduals(modelo_cananeia_2)
checkresiduals(modelo_ubatuba_2) 
```

-   Os gráficos de ACF dos resíduos, para ambos os modelos, não apresentam autocorrelações significativas, sugerindo que os modelos escolhidos capturam bem a estrutura da série.
-   O histograma dos resíduos, também em ambos os modelos, mostra uma distribuição aproximadamente normal, embora que haja uma leve assimetria.
-   Os gráficos superiores indicam que os resíduos flutuam em torno da média zero, conforme o esperado.

Conclui-se que, combinados aos resultados do teste de Ljung-Box (valor-p = 0.4958) e Ljung-Box (valor-p = 0.3114), respectivamente, os resíduos se comportam como ruído branco, validando os modelos ajustados.

## Algumas Previsões

Após a validação dos modelos ajustados para as séries de Cananéia e Ubatuba, pode ser realizada previsão de valores futuros com base nas estruturas do modelo SARIMA.

### Previsões para Cananéia

```{r tabela-sarima-estilo-latex, echo=FALSE, message=FALSE}
library(knitr)
library(kableExtra)

val_prev_cananeia <- predict(modelo_cananeia_2, n.ahead=12)

# Dados da previsão
meses <- c("Jan", "Fev", "Mar", "Abr", "Maio", "Jun",
           "Jul", "Ago", "Set", "Out", "Nov", "Dez")
valores <- c(24.77568, 25.46487, 24.52220, 22.23292, 20.57405, 18.14654,
             18.04329, 18.09627, 18.92109, 21.02668, 22.58554, 23.96205)
se <- c(0.9316235, 0.9894350, 1.0000344, 1.0020342, 1.0024135, 1.0024855,
        1.0024990, 1.0025010, 1.0024984, 1.0024818, 1.0023942, 1.0019323)

# Tabela com 2 blocos: Jan–Jun e Jul–Dez
tabela <- data.frame(
  Mês1 = meses[1:6],
  Previsao1 = round(valores[1:6], 3),
  SE1 = round(se[1:6], 3),
  Mês2 = meses[7:12],
  Previsao2 = round(valores[7:12], 3),
  SE2 = round(se[7:12], 3)
)

# Criar a tabela
kable(tabela, booktabs = TRUE, align = "c",
      col.names = c("Mês", "$$\\hat{Z}_{t+i}$$", "S.E.",
                    "Mês", "$$\\hat{Z}_{t+i}$$", "S.E."),
      caption = "Valores previstos pelo modelo SARIMA ajustado à Série Cananéia, para os meses de Jan a Dez de 1986.") %>%
  kable_styling(latex_options = c("HOLD_position", "striped", "scale_down")) %>%
  add_header_above(c(" " = 3, " " = 3))
```

```{r}
# Previsão para os próximos 12 meses
forecast_cananeia <- forecast(modelo_cananeia_2, h = 12)
autoplot(forecast_cananeia) +
  ggtitle("Gráfico de previsões para Cananéia") +
  ylab("Valores previstos") + xlab("Ano")
```

### Previsões para Ubatuba

```{r tabela-ubatuba, echo=FALSE, message=FALSE}

val_prev_ubatuba <- predict(modelo_ubatuba_2, n.ahead=12)

library(knitr)
library(kableExtra)

# Vetores com os dados
meses <- c("Jan", "Fev", "Mar", "Abr", "Maio", "Jun",
           "Jul", "Ago", "Set", "Out", "Nov", "Dez")

valores <- c(25.10110, 26.04463, 24.83549, 22.65839, 21.13006, 19.56434,
             19.46188, 19.82809, 20.00026, 21.72412, 23.14859, 24.20826)

se <- c(1.108920, 1.350272, 1.453146, 1.500586, 1.523099, 1.533909,
        1.539113, 1.541592, 1.542706, 1.543064, 1.542861, 1.541986)

# Dividir a tabela para exibir lado a lado
df <- data.frame(
  Mês = meses[1:6],
  Previsão = round(valores[1:6], 2),
  `Erro Padrão` = round(se[1:6], 2),
  Mês2 = meses[7:12],
  Previsão2 = round(valores[7:12], 2),
  `Erro Padrão2` = round(se[7:12], 2)
)

# Criar tabela

kable(df, booktabs = TRUE, align = "c",
      col.names = c("Mês", "$$\\hat{Z}_{t+i}$$", "S.E.",
                    "Mês", "$$\\hat{Z}_{t+i}$$", "S.E."),
      caption = "Valores previstos pelo modelo SARIMA ajustado à Série Ubatuba, para os meses de Jan a Dez de 1986.") %>%
  kable_styling(latex_options = c("HOLD_position", "striped", "scale_down")) %>%
  add_header_above(c(" " = 3, " " = 3))
```

```{r}
forecast_ubatuba <- forecast(modelo_ubatuba_2, h = 12)
autoplot(forecast_ubatuba) +
  ggtitle("Gráfico de previsões para Ubatuba") +
  ylab("Valores previstos") + xlab("Ano")
```

# Conclusão

A análise comparativa das séries de temperatura de Cananéia e Ubatuba revela que, embora ambas sigam um forte ciclo sazonal, existem diferenças notáveis. Ubatuba é, em média, mais quente que Cananéia, mas esta última apresenta uma variabilidade ligeiramente maior nas suas temperaturas. Uma análise de tendência linear mostrou que, para o período de 1976 a 1985, não há evidência de uma tendência de aquecimento ou resfriamento em Cananéia, enquanto Ubatuba apresentou uma leve, mas estatisticamente significativa, tendência de resfriamento. A modelagem SARIMA quantifica estas dinâmicas subjacentes, que são moduladas pelas distintas geografias locais.

A análise pode servir para identificar o impacto de fenómenos climáticos de larga escala. Eventos como o forte El Niño de 1982-1983 pode ter influenciado o clima local de formas diferentes como podemos ver nas séries temporais da Figura [-@fig-serie], onde em 1983 a cidade de Cananéia teve um aquecimento, mas a cidade de Ubatuba teve um resfriamento. Esse comportamento anomalo provavelmente foi a causa dos resíduos de maior magnitude nesse periodo, identificados na Subseção [-@sec-residuo] de análise dos resíduos dos modelos finais.

Séries temporais prova ser uma metodologia adequada para compreender as dinâmicas climáticas. Como próximos passos, pesquisas futuras poderiam expandir a extensão temporal, analisando séries mais longas para verificar a estabilidade dos padrões observados; incluir análise multivariada, incorporando outras variáveis como precipitação, vento e temperatura da superfície do mar para construir modelos mais completos; e ter uma expansão espacial, replicando a análise para outras estações meteorológicas ao longo da costa para mapear gradientes climáticos com maiores detalhes.
